[gd_scene load_steps=11 format=3 uid="uid://dux26yrr2vnx6"]

[ext_resource type="Script" path="res://file_explorer_tunnel.gd" id="1_ftqqq"]
[ext_resource type="Texture2D" uid="uid://bqhqyq3hqj2c1" path="res://icon.svg" id="3_7wtfx"]

[sub_resource type="ProceduralSkyMaterial" id="ProceduralSkyMaterial_3qfv2"]
sky_horizon_color = Color(0.64625, 0.65575, 0.67075, 1)
ground_horizon_color = Color(0.64625, 0.65575, 0.67075, 1)

[sub_resource type="Sky" id="Sky_j47eo"]
sky_material = SubResource("ProceduralSkyMaterial_3qfv2")

[sub_resource type="Environment" id="Environment_x3kf8"]
background_mode = 1
sky = SubResource("Sky_j47eo")
tonemap_mode = 2
glow_enabled = true

[sub_resource type="GDScript" id="GDScript_6fdxy"]
script/source = "extends CharacterBody3D

var speed := 5.0
func _physics_process(delta: float) -> void:
	var direction := Input.get_vector(\"left\", \"right\", \"foward\", \"backward\")
	direction = direction.rotated(-rotation.y)
	velocity.x = direction.x * speed
	velocity.z = direction.y * speed
	
	
	
	move_and_slide()
	
func _unhandled_input(event: InputEvent) -> void:
	if event is InputEventKey:
		var direction_2 := Input.get_vector(\"ui_left\", \"ui_right\", \"ui_up\",\"ui_down\")
		rotate_y(-direction_2.x * .1)
		$Camera3D.rotate_x(-direction_2.y * .1)
		
"

[sub_resource type="CylinderMesh" id="CylinderMesh_53s2g"]
flip_faces = true
top_radius = 3.0
bottom_radius = 3.0
height = 40.0
cap_top = false
cap_bottom = false

[sub_resource type="Shader" id="Shader_el450"]
code = "shader_type spatial;

uniform sampler2D img;
uniform float x_scale = 10.0;
uniform float y_scale = 10.0;
uniform float time = 0.5;

void fragment(){
	float x = mod(UV.x, 1.0/x_scale);
	float y = mod(UV.y, 1.0/y_scale);
	EMISSION = vec3(0.0, 1.0, 0.0);
	
	float direction;
	if(mod(UV.x, 2.0/x_scale)-mod(x, 1.0/x_scale) == 0.0){
		direction = -TIME/3.0;
	}else{
		direction = TIME/3.0;
	}
	
	vec3 tex = texture(img, vec2(x*x_scale, direction+TIME+y*y_scale)).rgb;
	float brightness = mod(UV.y - (TIME*time) + y + UV.x-x, 0.5);
	ALPHA = 0.1+pow(tex.x * brightness, 0.75);
	if(ALPHA > 0.5){EMISSION = vec3(0.5, 1.0, 0.5);}
}"

[sub_resource type="ShaderMaterial" id="ShaderMaterial_bppbe"]
render_priority = 0
shader = SubResource("Shader_el450")
shader_parameter/x_scale = 7.0
shader_parameter/y_scale = 10.0
shader_parameter/time = 0.1

[sub_resource type="StandardMaterial3D" id="StandardMaterial3D_vpdef"]
next_pass = SubResource("ShaderMaterial_bppbe")
albedo_texture = ExtResource("3_7wtfx")

[node name="FileExplorerTunnel" type="Node3D"]
script = ExtResource("1_ftqqq")

[node name="WorldEnvironment" type="WorldEnvironment" parent="."]
environment = SubResource("Environment_x3kf8")

[node name="Camera3D" type="CharacterBody3D" parent="."]
transform = Transform3D(1, 0, 0, 0, 1, 0, 0, 0, 1, 0, 0, 2)
script = SubResource("GDScript_6fdxy")

[node name="Camera3D" type="Camera3D" parent="Camera3D"]

[node name="FileNodeContainer" type="Node3D" parent="."]

[node name="Tunnel" type="Node3D" parent="."]

[node name="MeshInstance3D" type="MeshInstance3D" parent="Tunnel"]
transform = Transform3D(-4.37114e-08, 1, 0, -1, -4.37114e-08, 0, 0, 0, 1, -13.9196, 0, 1.62653)
mesh = SubResource("CylinderMesh_53s2g")
surface_material_override/0 = SubResource("StandardMaterial3D_vpdef")
